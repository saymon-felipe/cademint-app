{"remainingRequest":"C:\\Workspace\\github\\cademint-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Workspace\\github\\cademint-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace\\github\\cademint-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\github\\cademint-app\\src\\components\\header.vue?vue&type=template&id=29e8c3c6&scoped=true&","dependencies":[{"path":"C:\\Workspace\\github\\cademint-app\\src\\components\\header.vue","mtime":1630529695920},{"path":"C:\\Workspace\\github\\cademint-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\github\\cademint-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Workspace\\github\\cademint-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\github\\cademint-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}